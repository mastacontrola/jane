Need to add these to admin's home page. The backend is already able to do handle these things, just need to create the front end for them.


Delete Settings-Set
Show Active Sessions
Modify Settings-Set Name,SMB Allowed IP, WHERE, and Group for Admins-only.


Windows Server supports different levels of script authentication:

	Restricted - No scripts can be run. Windows PowerShell can be used only in interactive mode.
	AllSigned - Only scripts signed by a trusted publisher can be run.
	RemoteSigned - Downloaded scripts must be signed by a trusted publisher before they can be run.
	Unrestricted - No restrictions; all Windows PowerShell scripts can be run.

Linux can sign these scripts and authenticate in this manner. Not within the scope of a 0.01 release - but absolutely going to be integrated in future versions.


Creating a share in powershell, setting permissions and ACLs, disabling inheritance, and then applying the rules.
(The product of 4 hours of research... 14 lines of code.)

New-Item “C:\abc\ach0208$" –type directory -Force
New-SMBShare –Name “ach0208$” –Path “C:\abc\ach0208$” -FullAccess ach0208
$acl = New-Object System.Security.AccessControl.DirectorySecurity
$permission = "ach0208","FullControl","Allow"
$accessRule = New-Object System.Security.AccessControl.FileSystemAccessRule $permission
$acl.SetAccessRule($accessRule)
$permission = "Administrators","FullControl","Allow"
$accessRule = New-Object System.Security.AccessControl.FileSystemAccessRule $permission
$acl.SetAccessRule($accessRule)
$permission = "System","FullControl","Allow"
$accessRule = New-Object System.Security.AccessControl.FileSystemAccessRule $permission
$acl.SetAccessRule($accessRule)
$acl.SetAccessRuleProtection($True, $True)
$acl | Set-Acl C:\abc\ach0208$


CreateShare - radio control, 1, 0, or ""
BaseDirectory - Textbox path the share will be made in.
ShareName - textbox name of share
aclAdministrators - checkbox with value "on"
aclSystem - checkbox with value "on"
aclOther - textbox other permissions to be set on the acl.




